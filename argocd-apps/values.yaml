argocd-apps:
  applications:
    - name: mysql-helm
      namespace: argo-cd
      project: default
      source:
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 9.4.4
        chart: mysql
        helm:
          releaseName: mysql-helm
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: mysql
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: mysql
        helm:
          releaseName: mysql
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: postgresql
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: postgresql
        helm:
          releaseName: postgresql
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: pgadmin4
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: pgadmin4
        helm:
          releaseName: pgadmin4
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: redis-cluster
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: redis-cluster
        helm:
          releaseName: redis-cluster-01
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: redisinsight
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: redisinsight
        helm:
          releaseName: redisinsight
      destination:
        server: https://kubernetes.default.svc
        namespace: db
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: kafka
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: kafka
        helm:
          releaseName: kafka
      destination:
        server: https://kubernetes.default.svc
        namespace: kafka
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: kafka-ui-helm
      namespace: argo-cd
      project: default
      source:
        repoURL: https://provectus.github.io/kafka-ui
        targetRevision: 0.4.6
        chart: kafka-ui
        helm:
          releaseName: kafka-ui-helm
          parameters:
            - name: ingress.enabled
              value: 'true'
            - name: ingress.host
              value: kafka-ui.local
            - name: 'yamlApplicationConfig.kafka.clusters[0].name'
              value: kafka-01
            - name: 'yamlApplicationConfig.kafka.clusters[0].bootstrapServers'
              value: kafka.kafka.svc:9092
            - name: 'yamlApplicationConfig.auth.type'
              value: disabled
            - name: 'yamlApplicationConfig.management.health.ldap.enabled'
              value: 'false'
      destination:
        server: https://kubernetes.default.svc
        namespace: kafka
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: kafka-ui
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: kafka-ui
        helm:
          releaseName: kafka-ui
      destination:
        server: https://kubernetes.default.svc
        namespace: kafka
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: harbor
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: harbor
        helm:
          releaseName: harbor
      destination:
        server: https://kubernetes.default.svc
        namespace: harbor
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: kube-prometheus-stack-crd
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/prometheus-community/helm-charts.git
        targetRevision: kube-prometheus-stack-42.2.1
        path: charts/kube-prometheus-stack/crds/
        directory:
          recurse: true
      destination:
        server: https://kubernetes.default.svc
        namespace: monitor
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          - Replace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: kube-prometheus-stack
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: kube-prometheus-stack
        helm:
          releaseName: kube-prometheus-stack
          skipCrds: true
      destination:
        server: https://kubernetes.default.svc
        namespace: monitor
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
    - name: jaeger-all-in-one
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: jaeger-all-in-one
        helm:
          releaseName: jaeger-all-in-one
      destination:
        server: https://kubernetes.default.svc
        namespace: jaeger
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    - name: signoz
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/k8s-services
        targetRevision: HEAD
        path: signoz
        helm:
          releaseName: signoz
      destination:
        server: https://kubernetes.default.svc
        namespace: signoz
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
    ### APPLICATIONS ###
    - name: a-svc
      namespace: argo-cd
      project: default
      source:
        repoURL: https://github.com/minixxie/apps
        targetRevision: HEAD
        path: a-svc.java/k8s
      destination:
        server: https://kubernetes.default.svc
        namespace: monitor
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        # automated:
        #   prune: false
        #   selfHeal: false
