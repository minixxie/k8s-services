kube-prometheus-stack:
  prometheus:
    ingress:
      enabled: true
      hosts:
        - prometheus.local
    # https://fabianlee.org/2022/07/08/prometheus-monitoring-services-using-additional-scrape-config-for-prometheus-operator/
    prometheusSpec:
      additionalScrapeConfigs:
        - job_name: kubernetes-service-endpoints
          kubernetes_sd_configs:
          - role: service
          relabel_configs:

          # annotation 'prometheus.io/scrape' must be set to 'true'
          - action: keep
            regex: true
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]

          # service cannot be in kube-system or prom namespaces
          - action: drop
            regex: (kube-system|prom)
            source_labels: [__meta_kubernetes_namespace]

          # service port name for any name
          - action: keep
            regex: .*
            source_labels: [__meta_kubernetes_service_port_name]

          # allow override of http scheme
          - action: replace
            regex: (https?)
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            target_label: __scheme__

          # allow override of default /metrics path
          - action: replace
            regex: (.+)
            source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            target_label: __metrics_path__

          # allow override of default port
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            target_label: __address__
          - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
          - action: replace
            source_labels: [__meta_kubernetes_namespace]
            target_label: kubernetes_namespace
          - action: replace
            source_labels: [__meta_kubernetes_service_name]
            target_label: kubernetes_name

  alertmanager:
    ingress:
      enabled: true
      hosts:
        - alertmanager.local
  grafana:
    adminPassword: hello123
    ingress:
      enabled: true
      hosts:
        - grafana.local
    dashboardProviders:
      dashboardprovider.yaml:
        apiVersion: 1
        providers:
        - name: provider-site
          orgId: 1
          folder: ''
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/provider-site
    dashboards:
      provider-site:
        prometheus-stats:  # https://grafana.com/grafan/dashboards/2-prometheus-stats/
          gnetId: 2
          revision: 2
          datasource: Prometheus
        istio-performance:  # https://grafana.com/grafan/dashboards/12153-istio-performance-dashboard/
          gnetId: 12153
          revision: 1
          datasource: Prometheus
        jvm-micrometer-in-k8s:  # https://grafana.com/grafan/dashboards/13788-jvm-micrometer-in-k8s/
          gnetId: 13788
          revision: 1
          datasource: Prometheus
        spring-boot-observability:  # https://grafana.com/grafan/dashboards/17175-spring-boot-observability/
          gnetId: 17175
          revision: 1
          datasource: Prometheus
